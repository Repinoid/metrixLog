# builder будет использоваться для создания исполняемого файла сервера
FROM golang:alpine AS builder

# WORKDIR - рабочая директория в контейнере
WORKDIR /wd  

# dependicies
# ./ - путь в контейнере
COPY go.mod go.sum ./
# явно грузим зависимости
RUN go mod download

# копируем server code в контейнер в /wd
# COPY internal internal 
COPY cmd/*.go metrix/

# меняем рабочую директорию на папку с кодом сервера 
WORKDIR /wd/metrix
# создаём исполняемый файл servak в /wd/cmd/server
RUN go build -o metrix

# грузим чистый образ, в нём будет только исполняемый файл сервера
FROM alpine AS runner  

# копируем сбилденный /wd/cmd/server/servak в корень / runner
COPY --from=builder /wd/metrix / 
# копируем файл с переменными окружения 
COPY .env .

# открываем порт 
# такой же как на сервере, в http.ListenAndServe
# EXPOSE 8080 

# запускаем исполняемый файл servak
CMD ["./metrix", "-debug"] 
