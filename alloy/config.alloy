loki.write "main" {
  endpoint {
    url = "http://loki:3100/loki/api/v1/push"
  }
}

discovery.docker "linux" {
  host = "unix:///var/run/docker.sock"
}

loki.process "parse_logs" {
  // Парсим основной JSON лога
  stage.json {
    expressions = {
      "level" = "level",
      "msg" = "msg",
      "metrics" = "metrics",
    }
  }

  stage.log {
      message = "After first JSON parse"
      expressions = {
        "level" = "level",
        "msg" = "msg",
        "metrics" = "metrics",
      }
    }

  // Парсим вложенный объект metrics как текст
  stage.json {
    source = "metrics"
    expressions = {
      "Alloc" = "Alloc",
      "BuckHashSys" = "BuckHashSys",
      "Frees" = "Frees",
      "GCCPUFraction" = "GCCPUFraction",
      "GCSys" = "GCSys",
      "HeapAlloc" = "HeapAlloc",
      "HeapIdle" = "HeapIdle",
      "HeapInuse" = "HeapInuse",
      "HeapObjects" = "HeapObjects",
      "HeapReleased" = "HeapReleased",
      "HeapSys" = "HeapSys",
      "LastGC" = "LastGC",
      "Lookups" = "Lookups",
      "MCacheInuse" = "MCacheInuse",
      "MCacheSys" = "MCacheSys",
      "MSpanInuse" = "MSpanInuse",
      "MSpanSys" = "MSpanSys",
      "Mallocs" = "Mallocs",
      "NextGC" = "NextGC",
      "NumForcedGC" = "NumForcedGC",
      "NumGC" = "NumGC",
      "OtherSys" = "OtherSys",
      "PauseTotalNs" = "PauseTotalNs",
      "StackInuse" = "StackInuse",
      "StackSys" = "StackSys",
      "Sys" = "Sys",
      "TotalAlloc" = "TotalAlloc",
      "TotalMemory" = "TotalMemory",
      "FreeMemory" = "FreeMemory",
      "CPUutilization1" = "CPUutilization1",
    }
  }

  stage.log {
      message = "After metrics parse"
      expressions = {
        "Alloc" = "Alloc",
        "HeapAlloc" = "HeapAlloc",
        // другие нужные поля
      }
    }

  // Добавляем лейблы (опционально)
  stage.labels {
    values = {
      "log_level" = "level",
    }
  }

  forward_to = [loki.write.main.receiver]
}

loki.source.docker "containers" {
  host = "unix:///var/run/docker.sock"
  targets = discovery.docker.linux.targets
  labels = {
    "job" = "jobba",
    "container" = "metr",
    "env" = "test",
    "service" = "myapp",
  }
  forward_to = [loki.process.parse_logs.receiver]
}

local.file_match "logs" {
  path_targets = [{
    __path__ = "/var/log/myapp/app.log",
    job = "file_logs",
    env = "test",
  }]
}

loki.source.file "app_log" {
  targets = local.file_match.logs.targets
  forward_to = [loki.write.main.receiver]
}


// {container="metr"} |= "SysMetrix"
// | regexp `"Alloc":(?P<alloc>\d+)`
// | line_format "{{.alloc}}"